{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "API Documentation for Productivio"
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 123
          },
          "email": {
            "type": "string",
            "example": "lavacacoja@correoincreible.com"
          },
          "name": {
            "type": "string",
            "example": "John Smith"
          },
          "description": {
            "type": "string",
            "example": "A software developer with experience in Python and Java"
          },
          "userPoints": {
            "type": "integer",
            "example": 100
          },
          "activeTasks": {
            "type": "integer",
            "example": 3
          },
          "friends": {
            "type": "integer",
            "example": 10
          },
          "userPicUrl": {
            "type": "string",
            "example": "https://www.dzoom.org.es/wp-content/uploads/2020/02/portada-foto-perfil-redes-sociales-consejos.jpg"
          },
          "userColor": {
            "type": "string",
            "example": "red"
          }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "lavacaroja@correoincreible.com"
          },
          "name": {
            "type": "string",
            "example": "John Smith"
          },
          "description": {
            "type": "string",
            "example": "A software developer with experience in Python and Java"
          },
          "userPicUrl": {
            "type": "string",
            "example": "https://www.dzoom.org.es/wp-content/uploads/2020/02/portada-foto-perfil-redes-sociales-consejos.jpg"
          },
          "userColor": {
            "type": "string",
            "example": "red"
          },
          "password": {
            "type": "string",
            "example": "jeje"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 456
          },
          "name": {
            "type": "string",
            "example": "Implement the login feature"
          },
          "description": {
            "type": "string",
            "example": "Create the UI and backend logic for the login page"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2023-04-30"
          },
          "progress": {
            "type": "integer",
            "example": 50
          },
          "difficulty": {
            "type": "string",
            "example": "Medium"
          },
          "team": {
            "type": "string",
            "example": "Development"
          },
          "assignedUserId": {
            "type": "integer",
            "example": 123
          }
        }
      },
      "CreateTask": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Implement the login feature"
          },
          "description": {
            "type": "string",
            "example": "Create the UI and backend logic for the login page"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2023-04-30"
          },
          "progress": {
            "type": "integer",
            "example": 50
          },
          "difficulty": {
            "type": "string",
            "example": "Medium"
          },
          "team": {
            "type": "string",
            "example": "Development"
          },
          "assignedUserId": {
            "type": "integer",
            "example": 123
          }
        }
      },
      "Team": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 789
          },
          "name": {
            "type": "string",
            "example": "Development"
          },
          "description": {
            "type": "string",
            "example": "The team responsible for developing new features"
          },
          "manager": {
            "$ref": "#/components/schemas/User"
          },
          "workers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "CreateTeam": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Development"
          },
          "description": {
            "type": "string",
            "example": "The team responsible for developing new features"
          },
          "managerId": {
            "type": "integer",
            "example": 789
          },
          "workerIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "example": [
                2,
                45,
                78
              ]
            }
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 101
          },
          "creatorUser": {
            "$ref": "#/components/schemas/User"
          },
          "description": {
            "type": "string",
            "example": "Check out this cool new feature we just released!"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "example": "2023-03-23T10:30:00Z"
          },
          "likes": {
            "type": "integer",
            "example": 5
          },
          "likedByMe": {
            "type": "boolean",
            "example": true
          },
          "taskBarProgress": {
            "type": "integer",
            "example": 50
          },
          "taskBarPrimaryColor": {
            "type": "string",
            "example": "#45F2F0"
          },
          "taskBarSecondaryColor": {
            "type": "string",
            "example": "#f8020F"
          }
        }
      },
      "CreatePost": {
        "type": "object",
        "properties": {
          "creatorUserId": {
            "type": "integer",
            "example": 5
          },
          "description": {
            "type": "string",
            "example": "Check out this cool new feature we just released!"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "example": "2023-03-23T10:30:00Z"
          }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 202
          },
          "postId": {
            "type": "integer",
            "example": 101
          },
          "creatorUserId": {
            "type": "integer",
            "example": 456
          },
          "content": {
            "type": "string",
            "example": "Great work! Can't wait to try it out."
          }
        }
      },
      "CreateComment": {
        "type": "object",
        "properties": {
          "creatorUserId": {
            "type": "integer",
            "example": 456
          },
          "content": {
            "type": "string",
            "example": "Great work! Can't wait to try it out."
          }
        }
      },
      "Roadmap": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            },
            "example": [
              {
                "id": 1,
                "name": "Implement the login feature",
                "description": "Create the UI and backend logic for the login page",
                "endDate": "2023-04-30",
                "progress": 50,
                "difficulty": "Medium",
                "team": "Development"
              },
              {
                "id": 2,
                "name": "Implement the registration feature",
                "description": "Create the UI and backend logic for the registration page",
                "endDate": "2023-05-31",
                "progress": 25,
                "difficulty": "Easy",
                "team": "Development"
              }
            ]
          }
        }
      },
      "Ranking": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "rankingPosition": {
                  "type": "integer",
                  "example": 1
                },
                "user": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/posts": {
      "get": {
        "summary": "Get all posts",
        "parameters": [
          {
            "in": "query",
            "name": "user",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "summary": "Create a new post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/comments": {
      "get": {
        "summary": "Get all comments from a post",
        "parameters": [
          {
            "in": "query",
            "name": "postId",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "summary": "Add a comment to a post",
        "parameters": [
          {
            "in": "query",
            "name": "postId",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateComment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/posts/{postId}/like": {
      "post": {
        "summary": "Like a post",
        "description": "Add the current user to the list of people who liked the post",
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "summary": "Remove the like from a post",
        "description": "Remove the current user from the list of people who liked the post",
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/teams": {
      "get": {
        "summary": "Get all teams",
        "parameters": [
          {
            "in": "query",
            "name": "user",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "summary": "Create a new team",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeam"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "summary": "Get user information (if following)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{userId}/roadmap": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "summary": "Get user roadmap (list of completed tasks)",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Roadmap"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "summary": "Get tasks",
        "parameters": [
          {
            "in": "query",
            "name": "user",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "summary": "Create a new task",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTask"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/tasks/{taskId}": {
      "put": {
        "summary": "Update an existing task",
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/ranking": {
      "get": {
        "summary": "Get ranking of top users by user points",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ranking"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  }
}